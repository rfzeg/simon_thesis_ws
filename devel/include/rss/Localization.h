// Generated by gencpp from file rss/Localization.msg
// DO NOT EDIT!


#ifndef RSS_MESSAGE_LOCALIZATION_H
#define RSS_MESSAGE_LOCALIZATION_H

#include <ros/service_traits.h>


#include <rss/LocalizationRequest.h>
#include <rss/LocalizationResponse.h>


namespace rss
{

struct Localization
{

typedef LocalizationRequest Request;
typedef LocalizationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Localization
} // namespace rss


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rss::Localization > {
  static const char* value()
  {
    return "657eb31c75cbeea4823f2ec9c2b4e987";
  }

  static const char* value(const ::rss::Localization&) { return value(); }
};

template<>
struct DataType< ::rss::Localization > {
  static const char* value()
  {
    return "rss/Localization";
  }

  static const char* value(const ::rss::Localization&) { return value(); }
};


// service_traits::MD5Sum< ::rss::LocalizationRequest> should match 
// service_traits::MD5Sum< ::rss::Localization > 
template<>
struct MD5Sum< ::rss::LocalizationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rss::Localization >::value();
  }
  static const char* value(const ::rss::LocalizationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rss::LocalizationRequest> should match 
// service_traits::DataType< ::rss::Localization > 
template<>
struct DataType< ::rss::LocalizationRequest>
{
  static const char* value()
  {
    return DataType< ::rss::Localization >::value();
  }
  static const char* value(const ::rss::LocalizationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rss::LocalizationResponse> should match 
// service_traits::MD5Sum< ::rss::Localization > 
template<>
struct MD5Sum< ::rss::LocalizationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rss::Localization >::value();
  }
  static const char* value(const ::rss::LocalizationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rss::LocalizationResponse> should match 
// service_traits::DataType< ::rss::Localization > 
template<>
struct DataType< ::rss::LocalizationResponse>
{
  static const char* value()
  {
    return DataType< ::rss::Localization >::value();
  }
  static const char* value(const ::rss::LocalizationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RSS_MESSAGE_LOCALIZATION_H
